SUCCESS [2023-10-25 07:33:00] Calcul accessibilite version 2
SUCCESS [2023-10-25 07:33:00] $type
SUCCESS [2023-10-25 07:33:00] [1] "dodgr"
SUCCESS [2023-10-25 07:33:00] 
SUCCESS [2023-10-25 07:33:00] $path
SUCCESS [2023-10-25 07:33:00] /space_mounts/data/marseille//dodgr/
SUCCESS [2023-10-25 07:33:00] FALSE
SUCCESS [2023-10-25 07:33:00] 
SUCCESS [2023-10-25 07:33:00] $pg
SUCCESS [2023-10-25 07:33:00] NULL
SUCCESS [2023-10-25 07:33:00] 
SUCCESS [2023-10-25 07:33:00] $distances
SUCCESS [2023-10-25 07:33:00] [1] TRUE
SUCCESS [2023-10-25 07:33:00] 
SUCCESS [2023-10-25 07:33:00] $denivele
SUCCESS [2023-10-25 07:33:00] [1] TRUE
SUCCESS [2023-10-25 07:33:00] 
SUCCESS [2023-10-25 07:33:00] $pkg
SUCCESS [2023-10-25 07:33:00] [1] "dodgr"
SUCCESS [2023-10-25 07:33:00] 
SUCCESS [2023-10-25 07:33:00] $turn_penalty
SUCCESS [2023-10-25 07:33:00] [1] TRUE
SUCCESS [2023-10-25 07:33:00] 
SUCCESS [2023-10-25 07:33:00] $graph_name
SUCCESS [2023-10-25 07:33:00] /space_mounts/data/marseille//dodgr//marseille.bicycle.dodgrnet
SUCCESS [2023-10-25 07:33:00] FALSE
SUCCESS [2023-10-25 07:33:00] 
SUCCESS [2023-10-25 07:33:00] $string
SUCCESS [2023-10-25 07:33:00] dodgr routing bicycle sur /space_mounts/data/marseille//dodgr/ a 2023-10-25 07:32:55.134868
SUCCESS [2023-10-25 07:33:00] FALSE
SUCCESS [2023-10-25 07:33:00] 
SUCCESS [2023-10-25 07:33:00] $departure_datetime
SUCCESS [2023-10-25 07:33:00] [1] "2019-12-17 08:00:00 UTC"
SUCCESS [2023-10-25 07:33:00] 
SUCCESS [2023-10-25 07:33:00] $mode
SUCCESS [2023-10-25 07:33:00] [1] "bicycle"
SUCCESS [2023-10-25 07:33:00] 
SUCCESS [2023-10-25 07:33:00] $n_threads
SUCCESS [2023-10-25 07:33:00] [1] 8
SUCCESS [2023-10-25 07:33:00] 
SUCCESS [2023-10-25 07:33:00] $future
SUCCESS [2023-10-25 07:33:00] [1] TRUE
SUCCESS [2023-10-25 07:33:00] 
SUCCESS [2023-10-25 07:33:00] $future_routing
SUCCESS [2023-10-25 07:33:00] function (routing) 
SUCCESS [2023-10-25 07:33:00] {
SUCCESS [2023-10-25 07:33:00]     rout <- routing
SUCCESS [2023-10-25 07:33:00]     rout$processed_graph <- NULL
SUCCESS [2023-10-25 07:33:00]     rout$elevation_data <- NULL
SUCCESS [2023-10-25 07:33:00]     return(rout)
SUCCESS [2023-10-25 07:33:00] }
SUCCESS [2023-10-25 07:33:00] <bytecode: 0x563719ed2578>
SUCCESS [2023-10-25 07:33:00] <environment: 0x563719ecd308>
SUCCESS [2023-10-25 07:33:00] 
SUCCESS [2023-10-25 07:33:00] $core_init
SUCCESS [2023-10-25 07:33:00] function (routing) 
SUCCESS [2023-10-25 07:33:00] {
SUCCESS [2023-10-25 07:33:00]     RcppParallel::setThreadOptions(numThreads = routing$n_threads)
SUCCESS [2023-10-25 07:33:00]     rout <- routing
SUCCESS [2023-10-25 07:33:00]     rout$pg <- load_streetnet(routing$graph_name)
SUCCESS [2023-10-25 07:33:00]     if ("dz" %in% names(rout$pg$graph)) {
SUCCESS [2023-10-25 07:33:00]         rout$pg$graph$dzplus <- rout$pg$graph$dz * rout$pg$graph$d * 
SUCCESS [2023-10-25 07:33:00]             (rout$pg$graph$dz > 0)
SUCCESS [2023-10-25 07:33:00]         rout$pg$graph_compound$dzplus <- rout$pg$graph$dz * rout$pg$graph$d * 
SUCCESS [2023-10-25 07:33:00]             (rout$pg$graph$dz > 0)
SUCCESS [2023-10-25 07:33:00]     }
SUCCESS [2023-10-25 07:33:00]     logger::log_info("router {graph_name} charg√©")
SUCCESS [2023-10-25 07:33:00]     return(rout)
SUCCESS [2023-10-25 07:33:00] }
SUCCESS [2023-10-25 07:33:00] <bytecode: 0x563719ed2f88>
SUCCESS [2023-10-25 07:33:00] <environment: 0x563719ecd308>
SUCCESS [2023-10-25 07:33:00] 
SUCCESS [2023-10-25 07:33:00] 
SUCCESS [2023-10-25 07:33:00] tmax:120
SUCCESS [2023-10-25 07:33:00] pdt:1
SUCCESS [2023-10-25 07:33:00] chunk:20M
SUCCESS [2023-10-25 07:33:00] resolution:200
SUCCESS [2023-10-25 07:33:00] out:200
SUCCESS [2023-10-25 07:33:00] les variables sont emplois
SUCCESS [2023-10-25 07:33:02] taille:333.6M gr:17 res_gr:12800
SUCCESS [2023-10-25 07:33:02] 26k ou, 12.8k quoi
SUCCESS [2023-10-25 07:33:02] 33 carreaux, 8 subsampling
SUCCESS [2023-10-25 07:33:02] future:TRUE, 3 workers
