---
# modifer les champs à votre convenance
title: "Métropole d'Aix-Marseille"
subtitle: Premiers résultats
author:
  - name: Xavier Timbeau
  - name: Jeanne Devineau
  - name: Maxime Parodi
institution: "OFCE"
date: today
date-modified: today
lang: fr
wp: tbc
annee: 2023
draft: true
format:
  wp-html: default
  wp-pdf: default
bibliography: resultat_references.bib
editor: visual
execute: 
  echo: false
  warning: false
---

```{r, include=FALSE}
# Les options qui se trouvent là sont fortement conseillées
library(knitr)
library(sf)
library(tidyverse)
library(showtext)
library(mapdeck)
library(ofce)
opts_chunk$set(
  echo = FALSE,
  warning = FALSE,
  message = FALSE,
  fig.pos="H", 
  out.extra="",
  dev="ragg_png",
  fig.showtext=TRUE,
  cache=FALSE)
source("../secrets/azure.R")
showtext_opts(dpi=200)
showtext_auto()
trim <- function(x, xm, xp) ifelse( x<= xm, xm, ifelse(x>= xp, xp, x))

communes <- bd_read("communes")
centre <- communes |> 
  filter(INSEE_COM==13015) |> 
  st_transform(4326) |> 
  st_centroid() |> 
  st_coordinates()
centre <- as.vector(centre)

c200ze <- bd_read("c200ze") |> st_transform(4326)

```

## Localisation des résidents, des actifs et des emplois

On limite l'analyse à la métropole d'Aix-Marseille-Provence.
Cela représente 26 000 carreaux 200m x 200m pour 107 communes/arrondissements
Les opportunités sont les emplois, 95% des emplois occupés par les actifs de la métropole sont couverts. On a retenu 21 143 carreaux d'opportunité pour un peu moins de 680 emplois.

::: {.panel-tabset .column-screen}

## résidents

```{r}
#| label: fig-resident
#| fig-cap: localisation des résidents
c200ze |> 
  mutate(
    act = tactocc1564 * ind_18_64) |> 
  filter(ind > 0, scot) |> 
  left_join(communes |>
              st_drop_geometry() |>
              select(com22=INSEE_COM, NOM, POPULATION)) |> 
  mutate(tooltip=glue::glue(
    "{NOM} {com22}<br>
     {ind} ind dans le carreau<br>
     {round(act)} actifs dans le carreau<br>
     {POPULATION} dans la commune"),
    ind = trim(ind/4, 0, 500)) |> 
  st_transform(4326) |> 
  mapdeck(style = 'mapbox://styles/xtimbeau/ckg2d9ypq0lzv19m8p6a7xqoi') |> 
  add_polygon(fill_colour = "ind", 
              elevation = "ind", 
              elevation_scale = 3, 
              palette= "oranges",
              legend = TRUE, 
              tooltip = "tooltip",
              legend_options = list(title = "pers./ha"),
              legend_format = list(fill_colour = as.integer)) |> 
  mapdeck_view(location = centre, zoom = 8)

```
## emplois

```{r}
#| label: fig-emplois
#| fig-cap: Localisation des emplois occupés par des actifs de la métropole
c200ze |> 
  filter(emp > 0) |> 
  left_join(communes |>
              st_drop_geometry() |>
              select(com22=INSEE_COM, NOM, POPULATION)) |> 
  mutate(tooltip=glue::glue(
    "{NOM} {com22}<br>
     {round(emp)} emplois occupés dans le carreau<br>
     {POPULATION} dans la commune"),
    ind = trim(emp/4, 0, 500)) |> 
  st_transform(4326) |> 
  mapdeck(style = 'mapbox://styles/xtimbeau/ckg2d9ypq0lzv19m8p6a7xqoi') |> 
  add_polygon(fill_colour = "ind", 
              elevation = "ind", 
              elevation_scale = 3, 
              palette= "purples",
              legend = TRUE, 
              tooltip = "tooltip",
              legend_options = list(title = "emp./ha"),
              legend_format = list(fill_colour = as.integer)) |> 
  mapdeck_view(location = centre, zoom = 8)

```
:::
## Calcul des distances {#sec-introduction .unnumbered}

Les distances et les temps de trajet pour la métropole d'Aix-Marseille ont été calculées en utilisant :

-   Les **données MOBPRO** pour sélectionner les paires de communes. Cela évite de calculer des distances entre des origines destinations sans lien. L'inconvénient est qu'on ne produit pas les distances pour des communes non reliées et donc on ne comprend pas l'absence de lien.

-   Pour les **transports en commun**, les GTFS répertoriés sur [Open Data - lepilote](https://www.lepilote.com/fr/open-data/83), le moteur employé est R^5^ e Conveyal. On a retenu soit la médianne, soit le quantile 5% sur une plage horaire d'une heure (de 8h à 9h, le matin, un jour de semaine hors période de congé). Ceci permet de tenir compte des fréquences et des temps de correspondance. Le quantile 5% représente la possibilité de choisir son horaire pour optimiser son temps de trajet.

-   Pour la **voiture,** les données OSM (téléchargées en novembre 2023) et le moteur de routage `dodgr` qui a été optimisé pour un calcul bien plus rapide. En plus des distances et des temps de trajet, on calcule les dénivelés et on pourra en tenir compte pour les émissions ultérieurement. Les vitesses de déplacement sont les limitations de vitesse en vigueur (ou renseignées sur OSM), modulées en fonction des types de route. Une pénalité pour les feux rouges ainsi que pour les changements de direction (traversée d'un carrefour) est appliquée. A ce stade, faute de données convaincantes, on a pas intégré la congestion. En utilisant la couche de mapbox sur le traffic habituel, il est envisageable de calculer les temps de parcours avec la congestion habituelle moyennant quelques hypothèses)

-   Pour le **vélo** et la **marche**, le moteur de calcul et les données sont les mêmes que pour la voiture, en utilisant bien sûr des vitesses conformes. Un coût du dénivelé positif est introduit pour ces deux modes, réduisant la vitesse lors des montées et l'augmentant pour le vélo uniquement pour les pentes inférieures à 5%. Aucun élément de stress à vélo n'est pris en compte, cela pourra être fait ultérieurement.

## Accessibilité par mode de transport

::: {.panel-tabset .column-screen}

## voiture

```{r}
#| label: fig-access-car
#| fig-cap: Accessibilité à 100 000 emplois en voiture
communes <- bd_read("communes")
centre <- communes |> 
  filter(INSEE_COM==13015) |> 
  st_transform(4326) |> 
  st_centroid() |> 
  st_coordinates()
centre <- as.vector(centre)
t_access <- bd_read("t_access")
t_access |> 
  filter(mode == "car_dgr2") |> 
  left_join(communes |>
              st_drop_geometry() |>
              select(com22=INSEE_COM, NOM, POPULATION)) |> 
  mutate(tooltip=glue::glue(
    "{NOM} {com22}<br>
     {ind} ind dans le carreau<br>
     {POPULATION} dans la commune<br>
     accès à 20k: {round(to20k)} min<br>
     accès à 50k: {round(to50k)} min<br>
     accès à 100k: {round(to100k)} min<br>"),
    to100k = trim(to100k, 0,45)) |> 
  st_transform(4326) |> 
  mapdeck(style = 'mapbox://styles/xtimbeau/ckg2d9ypq0lzv19m8p6a7xqoi') |> 
  add_polygon(fill_colour = "to100k", 
              elevation = "ind", 
              elevation_scale = .3, 
              palette= "rainbow",
              legend = TRUE, 
              tooltip = "tooltip",
              legend_options = list(title = "minutes"),
              legend_format = list(fill_colour = as.integer)) |> 
  mapdeck_view(location = centre, zoom = 8)
```
## transit

```{r}
#| label: fig-access-transit
#| fig-cap: Accessibilité à 100 000 emplois en transit (q5%)
t_access |> 
  filter(mode == "transit5") |> 
  left_join(communes |>
              st_drop_geometry() |>
              select(com22=INSEE_COM, NOM, POPULATION)) |> 
  mutate(tooltip=glue::glue(
    "{NOM} {com22}<br>
     {ind} ind dans le carreau<br>
     {POPULATION} dans la commune<br>
     accès à 20k: {round(to20k)} min<br>
     accès à 50k: {round(to50k)} min<br>
     accès à 100k: {round(to100k)} min<br>"),
    to100k = trim(to100k, 0,45)) |> 
  st_transform(4326) |> 
  mapdeck(style = 'mapbox://styles/xtimbeau/ckg2d9ypq0lzv19m8p6a7xqoi') |> 
  add_polygon(fill_colour = "to50k", 
              elevation = "ind", 
              elevation_scale = .3, 
              palette= "rainbow",
              legend = TRUE, 
              tooltip = "tooltip",
              legend_options = list(title = "minutes"),
              legend_format = list(fill_colour = as.integer)) |> 
  mapdeck_view(location = centre, zoom = 8)
```

## vélo

```{r}
#| label: fig-access-bike
#| fig-cap: Accessibilité à 100 000 emplois en vélo
t_access |> 
  filter(mode == "bike_tblr") |> 
  left_join(communes |>
              st_drop_geometry() |>
              select(com22=INSEE_COM, NOM, POPULATION)) |> 
  mutate(tooltip=glue::glue(
    "{NOM} {com22}<br>
     {ind} ind dans le carreau<br>
     {POPULATION} dans la commune<br>
     accès à 20k: {round(to20k)} min<br>
     accès à 50k: {round(to50k)} min<br>
     accès à 100k: {round(to100k)} min<br>"),
    to100k = trim(to100k, 0,45)) |> 
  st_transform(4326) |> 
  mapdeck(style = 'mapbox://styles/xtimbeau/ckg2d9ypq0lzv19m8p6a7xqoi') |> 
  add_polygon(fill_colour = "to100k", 
              elevation = "ind", 
              elevation_scale = .3, 
              palette= "rainbow",
              legend = TRUE, 
              tooltip = "tooltip",
              legend_options = list(title = "minutes"),
              legend_format = list(fill_colour = as.integer)) |> 
  mapdeck_view(location = centre, zoom = 8)
```

## marche

```{r}
#| label: fig-access-walk
#| fig-cap: Accessibilité à 100 000 emplois en vélo
t_access |> 
  filter(mode == "walk_tblr") |> 
  left_join(communes |>
              st_drop_geometry() |>
              select(com22=INSEE_COM, NOM, POPULATION)) |> 
  mutate(tooltip=glue::glue(
    "{NOM} {com22}<br>
     {ind} ind dans le carreau<br>
     {POPULATION} dans la commune<br>
     accès à 20k: {round(to20k)} min<br>
     accès à 50k: {round(to50k)} min<br>
     accès à 100k: {round(to100k)} min<br>"),
    to100k = trim(to100k, 0,45)) |> 
  st_transform(4326) |> 
  mapdeck(style = 'mapbox://styles/xtimbeau/ckg2d9ypq0lzv19m8p6a7xqoi') |> 
  add_polygon(fill_colour = "to100k", 
              elevation = "ind", 
              elevation_scale = .3, 
              palette= "rainbow",
              legend = TRUE, 
              tooltip = "tooltip",
              legend_options = list(title = "minutes"),
              legend_format = list(fill_colour = as.integer)) |> 
  mapdeck_view(location = centre, zoom = 8)
```

:::
